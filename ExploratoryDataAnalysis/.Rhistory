x = rbind(c(1, -1/4), c(-1/4, 1))
x
rpois(10,.5)
rpois(10,.05)
rpois(100,.05)
pnorm(210)
pnorm(rnorm(100))
dpois(4,2)
str(sample)
?sample
library(swirl)
swirl()
xyplot(y ~ x | f * g, data)
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality)
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout=c(5,1))
xyplot(Ozone~Wind, data = airquality)
p <- xyplot(Ozone~Wind, data = airquality)
print(p)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(x~y)
xyplot(y ~ x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
source("plot1.R", local = TRUE)
source(pathtofile="plot1.R", local = TRUE)
source(pathtofile="plot1.R")
source()
source(pathtofile("plot1.R"),local=TRUE)
myedut("plot2.R")
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diÃ§amonds)
str(diamonds)
table(diamonds$colors)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip = FALSE, pch =20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data=diamonds, pch =20, xlab = myxlab, ylab = myylab, main = mymain)
colors()
sample(colors(), 10)
colorRamp(c("red", "blue"))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette( c("red","blue"))
P1 (2)
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette( c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p2 <- colorRampPalette( c("blue","green"))
p2 <- colorRampPalette( c("blue","green"), alpha=.5)
p3 <- colorRampPalette( c("blue","green"), alpha=.5)
p3(5)
plot(x,y,pch=19, col = rgb(0,.5,.5))
plot(x,y,pch=19, col = rgb(0,.5,.5, .3))
col <- brewer.pal(3, "BuGn")
colS <- brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn"))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", colot = manufacturer)
qplot(drv, hwy, data = mpg, geom = "boxplot", colot = "manufacturer")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,aesthetic= drv)
qplot(hwy,data=mpg,fill= drv)
qplot(displ, hwy,data=mpg,facets = .~drv)
qplot(hwy,data=mpg,facets = drv ~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth", facets=.~drv))
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ, hwy ))
summary(g)
g+geom_point()
g+geom_point()+ geom_smooth()
g+geom_point()+ geom_smooth(method="lm")
g+geom_point()+ geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+ geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g+geom_point()+ geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g  +geom_line(0)
g  +geom_line()
g  +geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g
g + geom_point()
g + geom_point()
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
str(diamonds)
qplot(price,data=diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
brk
counts
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, color=cut, geom_smooth="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
summary(g)
g+geom_point(alpha=1/3)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds[myd,]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
diamonds[myd,]
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5)
abline(h = 1.5, col="blue")
abline(h = .4, col="red")
5
5
6
4
3
2
1
12
abline(h = .05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
denmt
plot(denmt )
distmt
cmat
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(cx,cy)
mdist(x,y)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distmp, 2, which.min)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
mdist(x,y,newCx,newCy)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers = 3)
kmeans(dataFrame, centers = 3)
kmObj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
kmObj$iter
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
execute("addPatt.R", local = TRUE)
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
svd(mat)
matu %*% diag %*% t(matv)
matu %*% diag %*% t(matv)
?scale
svd(scale(mat))
prcomp(scale(mat))
svd1$c[,1]
svd1$v[,1]
svd1$d
svd1$d
head(constantMatrix)
svd2$d
svd2$d
svd2$v[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
names(sub1[,1:12])
myedit("showXY.R")
myedit("showXY.R")
showMe(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
dim(kClust$centers)
laying <- which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl(daniel)
swirl()
dim(pm0)
head(pm0)
names(pm0)
print(cnames)
cnames <- strsplit(cnames, split = "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm = T)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
dates
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
both
head(pm0)
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
dim(mrg)
head(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y,]
rm(list = ls())
clear()
library(ggplot2)
setwd("C:/datasciencecoursera/ExploratoryDataAnalysis")
library(ggplot2)
setwd("C:/datasciencecoursera/ExploratoryDataAnalysis")
dClassification <- readRDS("Source_Classification_Code.rds")
dSummary <- readRDS("summarySCC_PM25.rds")
View(dClassification)
View(dClassification)
View(dSummary)
View(dSummary)
View(dSummary)
View(dSummary)
data <- merge(dSummary, dClassification)
View(data)
View(data)
View(data)
View(data)
?aggregate
name(data)
cname(data)
names(data)
tapply(data$Emissions, data$year, sum)
data <- tapply(data$Emissions, data$year, sum)
hist(data)
names(dSummary)
data <- tapply(data$Emissions, data$year, sum)
data <- tapply(dSummary$Emissions, dSummary$year, sum)
data
names(data)
rnames(data)
as.data.frame(data)
data <- as.data.frame(year = row.names(data), emission = data)
as.data.frame(year = row.names(data), emission = data)
?as.data.frame
data <- data.frame(year = row.names(data), emission = data)
data
plot(data$year, data$emission)
plot.xy(data$year, data$emission)
?plot.xy
with(data, plot.xy(year, emission))
with(data, plot(year, emission))
?barplot
barplot(data$emission, names.arg = data$year)
barplot(data$emission, names.arg = data$year, xlab = "year", ylab = "Emission")
with(data, plot(year, emission, xlab = "year", ylab = "Emission"))
?plot
with(data, plot(year, emission, xlab = "year", ylab = "Emission", pch = 12))
with(data, plot(year, emission, xlab = "year", ylab = "Emission", pch = 18))
with(data, points(year, emission, xlab = "year", ylab = "Emission", pch = 18))
barplot(data$emission, names.arg = data$year, xlab = "year", ylab = "Emission")
with(data, points(year, emission, xlab = "year", ylab = "Emission", pch = 18))
with(data, plot(year, emission, xlab = "year", ylab = "Emission", pch = 18))
